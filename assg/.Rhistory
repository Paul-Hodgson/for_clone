library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
install.packages("caret")
data(AlzheimerDisease)
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
library("gdata")
IL <- matchcols(training, with="IL")
an <- training[,c(IL)]
View(an)
View(an)
num2 <- data.matrix(an)
View(num2)
num3 <- data.table(num2)
num3 <- table(num2)
num3 <- as.matrix(num2)
an3 <- preProcess(an, thresh = 0.8)
M <- abs(cor(an[,]))
diag(M) <- 0
which(M> 0.8,arr.ind=T)
an3 <- preProcess(an, thresh = 0.8, method = "pca")
v <- fac.combine(list(an,diagnosis), order="standard", combine.levels=FALSE, sep=",", ...)
install.packages("dae")
v <- fac.combine(list(an,diagnosis), order="standard", combine.levels=FALSE, sep=",", ...)
library(dae)
v <- fac.combine(list(an,diagnosis), order="standard", combine.levels=FALSE, sep=",", ...)
v <- fac.combine(list(an,diagnosis), order="standard", combine.levels=FALSE)
view(diagnosis)
View(predictors)
View(diagnosis)
summary(diagnosis)
q4 <- cbind(predictors, diagnosis)
View(q4)
utils::View(q4)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
library("gdata")
IL4 <- matchcols(training, with="IL"|| "diagnosis")
IL4 <- matchcols(training, with=c("IL", "diagnosis")
IL4 <- matchcols(training, with=c("IL", "diagnosis"))
IL4 <- matchcols(training, with=c("IL", "diagnosis"), method="or")
an4 <- training[,c(IL4)]
IL2 <- cbind(IL, "diagnosis")
diag <- training [, "diagnosis"]
an4 <- cbind(an,diag)
View(an4)
tpca <- preProcess(an4, thresh = 0.8, method = "pca")
an4a <- an4
an4a[an4a == "Control"] <- "1"
an4a[an4a == "Control"] <- 1
View(an4a)
an4a <- an4
an4a[an4a == "Control"] <- 1
cont <- an4[which(diagnosis = "Control"), ]
cont <- an4[which(diagnosis == "Control"), ]
an4$diag <- 1
View(an4)
View(an4)
an4 <- cbind(an,diag)
View(an4)
View(cont)
cont <- an4[which(diag == "Control"), ]
cont$diag <- 1
cont$diag <- as.numeric(cont$diag)
imp <- an4[which(diag == "Impaired"), ]
imp$diag <- 1
imp$diag <- as.numeric(imp$diag)
an4b <- rbind (cont, imp)
View(an4b)
imp$diag <- 2
imp$diag <- as.numeric(imp$diag)
an4b <- rbind (cont, imp)
model1 <- train(.~., data = an4b, method = "glm")
model1 <- train(data = an4b, method = "glm")
model1 <- train(an4b, method = "glm")
model1 <- train(an4b, y, method = "glm")
model1 <- train(diag~., data = an4b, method = "glm")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
setwd("C://Work//Data_Science//Machine_Learning//assg")
list.files()
pml_train <- read.csv("pml-training.csv",header = TRUE)
utils.view(pml_train)
library(utils)
utils.view(pml_train)
utils::View(pml_train)
pml_test <- read.csv("pml-testing.csv",header = TRUE)
View(pml_test)
View(pml_test)
summary(pml_train)
